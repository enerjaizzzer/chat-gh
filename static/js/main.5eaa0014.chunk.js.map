{"version":3,"sources":["store/reducers/user.js","store/reducers/message.js","store/state.js","store/actions/actionUserLogIn.js","components/header/ComponentsPart/LogIn/LogInModal/index.js","components/header/ComponentsPart/LogIn/LogInModal/LogInModal.jsx","components/header/ComponentsPart/LogIn/LogInButton/index.js","components/header/ComponentsPart/LogIn/LogInButton/LogInButton.jsx","store/actions/actionUserRegistration.js","components/header/ComponentsPart/Registration/RegistrationModal/index.js","components/header/ComponentsPart/Registration/RegistrationModal/RegistrationModal.jsx","components/header/ComponentsPart/Registration/RegistrationButton/index.js","components/header/ComponentsPart/Registration/RegistrationButton/RegistrationButton.jsx","components/header/ComponentsPart/UserInformation/UserInformation/index.js","components/header/ComponentsPart/UserInformation/UserInformation/UserInformation.jsx","store/actions/actionUserLogOut.js","components/header/ComponentsPart/UserInformation/LogOutButton/index.js","components/header/ComponentsPart/UserInformation/LogOutButton/LogOutButton.jsx","components/header/index.js","components/header/Header.jsx","components/main/ComponentsPart/Messages/index.js","components/main/ComponentsPart/Messages/Messages.jsx","components/main/ComponentsPart/ConnectUser/index.js","components/main/ComponentsPart/ConnectUser/ConnectUser.jsx","components/main/index.js","components/main/Main.jsx","store/actions/actionYourMessage.js","components/footer/Footer.jsx","components/footer/index.js","store/actions/actionSomeoneMessage.js","utils/connectWebSocket.js","store/actions/actionUserIsHere.js","components/App.jsx","components/index.js","serviceWorker.js","index.js"],"names":["stateUser","settingUser","loginUser","numberUser","defaultAvatar","users","reducerUser","state","arguments","length","undefined","action","type","newUserLogInState","newNumberUser","forEach","element","i","nickName","payload","password","alert","_objectSpread","newUserRegistrationState","newUserInformation","avatar","newState","id","concat","uniqid","push","message","userIsHere","countMessages","formValue","someoneMessages","yourMessages","reducerMessages","newSomeoneState","shift","sort","a","b","time","message_objectSpread","newYourState","unshift","len","user","count","reducer","combineReducers","reducers","store","createStore","messages","actionUser","LogInModal","onChangeNickName","e","_this","valueNickName","target","value","onChangePassword","valuePassword","submitValue","preventDefault","dispatch","actionUserLogIn","this","react_default","createElement","Modal","Object","assign","props","size","aria-labelledby","centered","Form","className","onSubmit","Group","controlId","Label","Control","onChange","placeholder","Button","variant","Component","LogInButton","_React$useState","React","useState","_React$useState2","slicedToArray","modalShow","setModalShow","Fragment","onClick","LogIn_LogInModal","show","onHide","RegistrationModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","actionUserRegistration","RegistrationButton","Registration_RegistrationModal","UserInformation","connect","userInformation","console","log","Navbar","Brand","href","Image","src","roundedCircle","LogOutButton","actionUserLogOut","Header","Container","fluid","Row","Col","xs","span","offset","LogIn_LogInButton","Registration_RegistrationButton","ComponentsPart_UserInformation_UserInformation","UserInformation_LogOutButton","Messages","_ref","scrollingElement","document","body","scrollTop","scrollHeight","avatarIdentification","messageNickName","userNickName","RenderMessages","map","item","key","d","Date","getDate","getMonth","getFullYear","getHours","getMinutes","ConnectUser","Main","ComponentsPart_Messages","ComponentsPart_ConnectUser","actionYourMessage","Footer","onChangeMessage","ws","send","JSON","stringify","from","form","_this$props","actionSomeoneMessage","connectWebSocket","webSocket","onopen","onmessage","parse","data","actionUserIsHear","App","WebSocket","window","onfocus","title","actionUserIsHere","onblur","header","main","footer","Boolean","location","hostname","match","ReactDOM","render","es","components","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5eaa0014.chunk.js","sourcesContent":["import uniqid from 'uniqid';\n\nconst stateUser = {\n  settingUser: {\n    loginUser: false,\n    numberUser: 0,\n    defaultAvatar: 'https://windows10free.ru/uploads/posts/2017-04/1493287748_1487679899_icon-user-640x640.png',\n    users: [],\n  },\n};\n\nconst reducerUser = (state = stateUser, action) => {\n  switch (action.type) {\n    case 'USER_LOG_IN': {\n      let newUserLogInState = false;\n      let newNumberUser = 0;\n\n      state.users.forEach((element, i) => {\n        if (element.nickName === action.payload.nickName\n          && element.password === action.payload.password) {\n          newUserLogInState = true;\n          newNumberUser = i;\n        }\n      });\n      if (!newUserLogInState) {\n        alert('wrong login or password');\n      }\n      return { ...state, loginUser: newUserLogInState, numberUser: newNumberUser };\n    }\n    case 'USER_REGISTRATION': {\n      let newUserRegistrationState = false;\n      let newNumberUser = 0;\n      let newUserInformation = {};\n      state.users.forEach((element) => {\n        if (element.nickName === action.payload.nickName) {\n          alert('Nickname is busy');\n        } else {\n          newUserRegistrationState = state.users.length;\n          newNumberUser = state.users.length;\n          newUserInformation = {\n            nickName: action.payload.nickName,\n            password: action.payload.password,\n            avatar: action.payload.avatar,\n          };\n        }\n      });\n      const newState = { ...state };\n      newState.id = `${uniqid()}`;\n      newState.loginUser = newUserRegistrationState;\n      newState.numberUser = newNumberUser;\n      newState.users.push(newUserInformation);\n      return newState;\n    }\n    case 'USER_LOG_OUT': {\n      return { ...state, loginUser: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducerUser;\n","const stateUser = {\n  message: {\n    userIsHere: true,\n    countMessages: 0,\n    formValue: '',\n    someoneMessages: [],\n    yourMessages: [],\n  },\n};\n\nconst reducerMessages = (state = stateUser, action) => {\n  switch (action.type) {\n    case 'SOMEONE_MESSAGE': {\n      const newSomeoneState = state;\n      if (state.someoneMessages.length >= 10) {\n        newSomeoneState.someoneMessages.shift();\n      }\n      if (!state.userIsHere) {\n        newSomeoneState.countMessages += 1;\n      }\n      newSomeoneState.someoneMessages.push(action.payload);\n\n      newSomeoneState.someoneMessages.sort((a, b) => (\n        (a.time - b.time)\n      ));\n      return { ...newSomeoneState };\n    }\n    case 'YOUR_MESSAGE': {\n      const newYourState = state;\n\n      if (state.yourMessages.length >= 10) {\n        newYourState.yourMessages.shift();\n      }\n\n      newYourState.yourMessages.unshift(action.payload);\n      return { ...newYourState };\n    }\n    case 'SAVE_FORM_VALUE': {\n      const len = action.payload.formValue.length;\n      return { ...state, formValue: `${state.formValue}${action.payload.formValue[len - 1]}` };\n    }\n    case 'USER_IS_HERE': {\n      return { ...state, userIsHere: action.payload.user, countMessages: action.payload.count };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducerMessages;\n","import { createStore, combineReducers } from 'redux';\n\nimport * as reducers from './reducers';\n\nconst initState = {\n  settingUser: {\n    loginUser: false,\n    numberUser: 0,\n    defaultAvatar: 'https://windows10free.ru/uploads/posts/2017-04/1493287748_1487679899_icon-user-640x640.png',\n    users: [\n      {\n        id: '',\n        nickName: 'Guest',\n        password: 'admin',\n        avatar: 'https://hostenko.com/wpcafe/wp-content/uploads/wpavatar.png',\n      },\n    ],\n  },\n  messages: {\n    userIsHere: true,\n    countMessages: 0,\n    formValue: '',\n    someoneMessages: [],\n    yourMessages: [],\n  },\n};\n\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(reducer, initState);\n\nexport default store;\n","const actionUser = (nickName, password) => ({\r\n  type: 'USER_LOG_IN',\r\n  payload: {\r\n    nickName,\r\n    password,\r\n  },\r\n});\r\n\r\nexport default actionUser;\r\n","import LogInModal from './LogInModal';\n\nexport default LogInModal;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n} from 'react-bootstrap';\n\nimport store from '../../../../../store/state';\nimport actionUserLogIn from '../../../../../store/actions/actionUserLogIn';\n\nclass LogInModal extends Component {\n  onChangeNickName = (e) => {\n    this.valueNickName = e.target.value;\n  }\n\n  onChangePassword = (e) => {\n    this.valuePassword = e.target.value;\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n    store.dispatch(actionUserLogIn(this.valueNickName, this.valuePassword));\n  }\n\n  render() {\n    this.valueNickName = ' ';\n    this.valuePassword = ' ';\n    return (\n      <Modal\n        {...this.props}\n        size=\"xs\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form\n          className=\"text-center modal-form bg-dark text-light\"\n          onSubmit={this.submitValue}\n        >\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label className=\"title-form\">Send your Nickname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={this.onChangeNickName}\n              placeholder=\"NickName\"\n            />\n            <Form.Label className=\"title-form\">Send Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={this.onChangePassword}\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button\n            variant=\"outline-light\"\n            type=\"submit\"\n            className=\"button\"\n          >\n            LogIn\n          </Button>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default LogInModal;\n","import LogInButton from './LogInButton';\n\nexport default LogInButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport LogInModal from '../LogInModal';\n\nconst LogInButton = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button className=\"button\" variant=\"outline-light\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n      <LogInModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n\nexport default LogInButton;\n","const actionUser = (nickName, password) => ({\r\n  type: 'USER_REGISTRATION',\r\n  payload: {\r\n    nickName,\r\n    password,\r\n    avatar: 'https://hostenko.com/wpcafe/wp-content/uploads/wpavatar.png',\r\n  },\r\n});\r\n\r\nexport default actionUser;\r\n","import RegistrationModal from './RegistrationModal';\n\nexport default RegistrationModal;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n} from 'react-bootstrap';\n\nimport store from '../../../../../store/state';\nimport actionUserRegistration from '../../../../../store/actions/actionUserRegistration';\n\nclass RegistrationModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueNickName = '';\n    this.valuePassword = '';\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n    store.dispatch(actionUserRegistration(this.valueNickName, this.valuePassword));\n  };\n\n  onChangeNickName = (e) => {\n    this.valueNickName = e.target.value;\n  };\n\n  onChangePassword = (e) => {\n    this.valuePassword = e.target.value;\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"xs\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form\n          className=\"text-center modal-form bg-dark text-light\"\n          onSubmit={this.submitValue}\n        >\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label className=\"title-form\">Invent your Nickname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={this.onChangeNickName}\n              placeholder=\"NickName\"\n            />\n            <Form.Label className=\"title-form\">Invent your Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={this.onChangePassword}\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button\n            variant=\"outline-light\"\n            type=\"submit\"\n            className=\"button\"\n          >\n            Registration\n          </Button>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default RegistrationModal;\n","import RegistrationButton from './RegistrationButton';\n\nexport default RegistrationButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport RegistrationModal from '../RegistrationModal';\n\nconst RegistrationButton = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button className=\"button\" variant=\"outline-light\" onClick={() => setModalShow(true)}>\n        Registration\n      </Button>\n      <RegistrationModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n\nexport default RegistrationButton;\n","import UserInformation from './UserInformation';\n\nexport default UserInformation;\n","import React from 'react';\nimport { Navbar, Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nconst UserInformation = (props) => {\n  const { userInformation } = props;\n  console.log(userInformation)\n  return (\n    <>\n      <Navbar.Brand href=\"#home\" className=\"text-light logo\">\n        {userInformation.nickName}\n      </Navbar.Brand>\n      <Image\n        src={userInformation.avatar}\n        className=\"avatar\"\n        roundedCircle\n      />\n    </>\n  );\n};\n\nexport default connect(state => ({\n  userInformation: state.settingUser.users[state.settingUser.numberUser],\n}))(UserInformation);\n","const actionUser = () => ({\n  type: 'USER_LOG_OUT',\n  payload: false,\n});\n\nexport default actionUser;\n","import LogOutButton from './LogOutButton';\n\nexport default LogOutButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport store from '../../../../../store/state';\nimport actionUserLogOut from '../../../../../store/actions/actionUserLogOut';\n\nconst LogOutButton = () => (\n  <Button className=\"button\" variant=\"outline-light\" onClick={() => store.dispatch(actionUserLogOut())}>\n    LogOut\n  </Button>\n);\n\nexport default LogOutButton;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Navbar,\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap';\n\nimport LogInButton from './ComponentsPart/LogIn/LogInButton';\nimport RegistrationButton from './ComponentsPart/Registration/RegistrationButton';\nimport UserInformation from './ComponentsPart/UserInformation/UserInformation';\nimport LogOutButton from './ComponentsPart/UserInformation/LogOutButton';\n\nconst Header = (props) => {\n  const { loginUser } = props;\n  return (\n    <Container className=\"fixed-top bg-dark header\" fluid>\n      <Row>\n        <Col xs={2}>\n          <Navbar.Brand href=\"#home\" className=\"text-light logo\">Chat.[enerjaizzzer]</Navbar.Brand>\n        </Col>\n        {(!loginUser) && (\n          <Col xs={{ span: 2, offset: 8 }}>\n            <LogInButton />\n            <RegistrationButton />\n          </Col>\n        )}\n        {(loginUser) && (\n          <>\n            <Col xs={{ span: 2, offset: 7 }}>\n              <UserInformation />\n            </Col>\n            <Col xs={1}>\n              <LogOutButton />\n            </Col>\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default connect(state => ({ loginUser: state.settingUser.loginUser }))(Header);\n","import Messages from './Messages';\n\nexport default Messages;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport uniqid from 'uniqid';\nimport { Row, Col, Image } from 'react-bootstrap';\n\nconst Messages = ({\n  messages,\n  avatar,\n  nickName,\n  defaultAvatar,\n}) => {\n  const scrollingElement = (document.scrollingElement || document.body);\n  scrollingElement.scrollTop = scrollingElement.scrollHeight + 50;\n\n  const getDate = (time) => {\n    const d = new Date(time);\n\n    const dateString = `${d.getDate()}-${d.getMonth() + 1}-${d.getFullYear()} ${\n      d.getHours()}:${d.getMinutes()}`;\n    return dateString;\n  };\n\n  const avatarIdentification = (messageNickName, userNickName) => {\n    if (messageNickName === userNickName) {\n      return avatar;\n    }\n    return defaultAvatar;\n  };\n\n  const identificationAuthor = (messageNickName, userNickName) => {\n    if (messageNickName === userNickName) {\n      return 'message-block my';\n    }\n    return 'message-block';\n  };\n\n  const RenderMessages = messages.someoneMessages.map(item => (\n    <Row key={uniqid()} className={identificationAuthor(item.nickName, nickName)}>\n      <Col xs={1}>\n        <Image\n          src={avatarIdentification(item.nickName, nickName)}\n          className=\"message-avatar\"\n          roundedCircle\n        />\n      </Col>\n      <Col xs={11}>\n        <h2 className=\"message-nickName\">{item.nickName}</h2>\n        <p className=\"message-text\">{item.message}</p>\n        <p className=\"message-date\">{getDate(item.time)}</p>\n      </Col>\n    </Row>\n  ));\n\n  return (\n    <>\n      {RenderMessages}\n    </>\n  );\n};\n\nexport default connect(state => ({\n  messages: state.messages,\n  avatar: state.settingUser.users[state.settingUser.numberUser].avatar,\n  defaultAvatar: state.settingUser.defaultAvatar,\n  nickName: state.settingUser.users[state.settingUser.numberUser].nickName,\n}))(Messages);\n","import ConnectUser from './ConnectUser';\n\nexport default ConnectUser;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ConnectUser = ({ nickName }) => {\n  const scrollingElement = (document.scrollingElement || document.body);\n  scrollingElement.scrollTop = scrollingElement.scrollHeight + 50;\n\n  return (\n    <>\n      <p>\n        {nickName}\n        {' '}\n        connected!\n      </p>\n    </>\n  );\n};\n\nexport default connect(state => ({\n  nickName: state.settingUser.users[state.settingUser.numberUser].nickName,\n}))(ConnectUser);\n","import Main from './Main';\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport Messages from './ComponentsPart/Messages';\nimport ConnectUser from './ComponentsPart/ConnectUser';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Container className=\"main\" fluid>\n        <Row>\n          <Col>\n            <Messages />\n            <ConnectUser />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","const actionYourMessage = (nickName, message) => ({\r\n  type: 'YOUR_MESSAGE',\r\n  payload: {\r\n    nickName,\r\n    message,\r\n  },\r\n});\r\n\r\nexport default actionYourMessage;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Container,\n} from 'react-bootstrap';\n\nimport store from '../../store/state';\nimport actionYourMessage from '../../store/actions/actionYourMessage';\n\nclass Footer extends Component {\n  onChangeMessage = (e) => {\n    this.message = e.target.value;\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n    this.nickName = this.userInformation.nickName;\n\n    store.dispatch(actionYourMessage(this.nickName, this.message));\n\n    this.ws.send(JSON.stringify({\n      from: this.nickName,\n      message: this.message,\n    }));\n    e.target.form.value = '';\n  }\n\n  render() {\n    const { userInformation, ws } = this.props;\n\n    this.userInformation = userInformation;\n    this.ws = ws;\n\n    return (\n      <Container className=\"fixed-bottom bg-dark footer\" fluid>\n        <Form\n          className=\"text-center\"\n          onSubmit={this.submitValue}\n        >\n          <Row>\n            <Col xs={11}>\n              <Form.Control\n                id=\"form\"\n                type=\"text\"\n                onChange={this.onChangeMessage}\n                placeholder=\"Text message\"\n                className=\"send-form\"\n              />\n            </Col>\n            <Col xs={1}>\n              <Button\n                variant=\"outline-light\"\n                type=\"submit\"\n                className=\"button\"\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default connect(state => ({\n  userInformation: state.settingUser.users[state.settingUser.numberUser],\n}))(Footer);\n","import Footer from './Footer';\n\nexport default Footer;\n","const actionSomeoneMessage = (nickName, message, time) => ({\n  type: 'SOMEONE_MESSAGE',\n  payload: {\n    nickName,\n    message,\n    time,\n  },\n});\n\nexport default actionSomeoneMessage;\n","import store from '../store/state';\nimport actionSomeoneMessage from '../store/actions/actionSomeoneMessage';\n\nconst connectWebSocket = (ws) => {\n  const webSocket = ws;\n\n  webSocket.onopen = () => { };\n\n  webSocket.onmessage = (e) => {\n    const someoneMessage = JSON.parse(e.data);\n\n    someoneMessage.forEach((item) => {\n      store.dispatch(actionSomeoneMessage(item.from, item.message, item.time));\n    });\n  };\n};\n\nexport default connectWebSocket;\n","const actionUserIsHear = (user, count) => ({\n  type: 'USER_IS_HERE',\n  payload: {\n    user,\n    count,\n  },\n});\n\nexport default actionUserIsHear;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './header';\nimport Main from './main';\nimport Footer from './footer';\n\nimport connectWebSocket from '../utils/connectWebSocket';\nimport actionUserIsHere from '../store/actions/actionUserIsHere';\n\nimport store from '../store/state';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.ws = new WebSocket('wss://wssproxy.herokuapp.com/');\n  }\n\n  render() {\n    const { count, user } = this.props;\n    connectWebSocket(this.ws);\n\n    window.onfocus = () => {\n      document.title = 'Chat';\n      store.dispatch(actionUserIsHere(true, 0));\n    };\n    window.onblur = () => {\n      store.dispatch(actionUserIsHere(false, count));\n    };\n\n    if (!user) {\n      document.title = `${count} unread messages`;\n    }\n\n    return (\n      <>\n        <Header />\n        <Main />\n        <Footer ws={this.ws} />\n      </>\n    );\n  }\n}\n\nexport default connect(state => ({\n  count: state.messages.countMessages,\n  user: state.messages.userIsHere,\n}))(App);\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components';\nimport store from './store/state';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}