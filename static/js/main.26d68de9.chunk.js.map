{"version":3,"sources":["store/reducers/user.js","store/reducers/message.js","store/state.js","store/actions/actionUserLogIn.js","store/actions/actionSomeoneMessage.js","components/header/ComponentsPart/LogIn/LogInModal/index.js","components/header/ComponentsPart/LogIn/LogInModal/LogInModal.jsx","components/header/ComponentsPart/LogIn/LogInButton/index.js","components/header/ComponentsPart/LogIn/LogInButton/LogInButton.jsx","store/actions/actionUserRegistration.js","components/header/ComponentsPart/Registration/RegistrationModal/index.js","components/header/ComponentsPart/Registration/RegistrationModal/RegistrationModal.jsx","components/header/ComponentsPart/Registration/RegistrationButton/index.js","components/header/ComponentsPart/Registration/RegistrationButton/RegistrationButton.jsx","store/actions/actionUserChangeNickName.js","components/header/ComponentsPart/UserInformation/UserInformation/ChangeNameModal/index.js","components/header/ComponentsPart/UserInformation/UserInformation/ChangeNameModal/ChangeNickNameModal.jsx","components/header/ComponentsPart/UserInformation/UserInformation/index.js","components/header/ComponentsPart/UserInformation/UserInformation/UserInformation.jsx","store/actions/actionUserLogOut.js","components/header/ComponentsPart/UserInformation/LogOutButton/index.js","components/header/ComponentsPart/UserInformation/LogOutButton/LogOutButton.jsx","components/header/index.js","components/header/Header.jsx","components/main/ComponentsPart/Messages/index.js","components/main/ComponentsPart/Messages/Messages.jsx","components/main/ComponentsPart/ConnectUser/index.js","components/main/ComponentsPart/ConnectUser/ConnectUser.jsx","components/main/Main.jsx","components/main/index.js","store/actions/actionYourMessage.js","components/footer/Footer.jsx","components/footer/index.js","utils/connectWebSocket.js","utils/saveLocalStorage.js","store/actions/actionLoad.js","utils/loadLocalStorage.js","store/actions/actionUserIsHere.js","components/App.jsx","components/index.js","serviceWorker.js","index.js"],"names":["stateUser","settingUser","loginUser","numberUser","defaultAvatar","users","reducerUser","state","arguments","length","undefined","action","type","newUserLogInState","newNumberUser","forEach","element","i","nickName","payload","password","alert","_objectSpread","newUserRegistrationState","newUserInformation","avatar","newState","id","concat","uniqid","push","logunUser","message","userIsHere","countMessages","formValue","someoneMessages","yourMessages","reducerMessages","newSomeoneState","shift","sort","a","b","time","spinner","message_objectSpread","newYourState","unshift","len","user","count","reducer","combineReducers","reducers","store","createStore","messages","actionUserLogIn","actionSomeoneMessage","LogInModal","onChangeNickName","e","_this","valueNickName","target","value","onChangePassword","valuePassword","submitValue","preventDefault","now","Date","dispatch","this","react_default","createElement","Modal","Object","assign","props","size","aria-labelledby","centered","Form","className","onSubmit","Group","Label","Control","onChange","placeholder","Button","variant","Component","LogInButton","_React$useState","React","useState","_React$useState2","slicedToArray","modalShow","setModalShow","Fragment","onClick","LogIn_LogInModal","show","onHide","actionUserRegistration","RegistrationModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","RegistrationButton","Registration_RegistrationModal","actionUserChangeNickName","ChangeNickNameModal","controlId","UserInformation","connect","userInformation","Navbar","Brand","href","ChangeNameModal","Image","src","roundedCircle","actionUserLogOut","LogOutButton","_ref","Header","Container","fluid","Row","Col","xs","LogIn_LogInButton","Registration_RegistrationButton","span","offset","ComponentsPart_UserInformation_UserInformation","UserInformation_LogOutButton","Messages","scrollingElement","document","body","scrollTop","scrollHeight","avatarIdentification","messageNickName","userNickName","RenderMessages","map","item","key","xl","date","getDate","getMonth","getFullYear","getHours","getMinutes","ConnectUser","Main","Spinner","animation","role","ComponentsPart_Messages","ComponentsPart_ConnectUser","actionYourMessage","Footer","onChangeMessage","ws","send","JSON","stringify","from","form","_this$props","md","connectWebSocket","webSocket","onopen","onmessage","parse","data","slice","saveLocalstorage","settingUserStr","localStorage","setItem","actionLoad","loadLocalStorage","getItem","actionUserIsHear","App","WebSocket","ReconnectingWebSocket","window","onload","onunload","saveLocalStorage","onfocus","title","actionUserIsHere","onblur","header","main","footer","Boolean","location","hostname","match","ReactDOM","render","es","components","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y+BAEA,IAAMA,EAAY,CAChBC,YAAa,CACXC,WAAW,EACXC,WAAY,EACZC,cAAe,6FACfC,MAAO,KAuEIC,EAnEK,WAA+B,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAWW,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MACb,IAAK,cACH,IAAIC,GAAoB,EACpBC,EAAgB,EAYpB,OAVAP,EAAMF,MAAMU,QAAQ,SAACC,EAASC,GACxBD,EAAQE,WAAaP,EAAOQ,QAAQD,UACnCF,EAAQI,WAAaT,EAAOQ,QAAQC,WACvCP,GAAoB,EACpBC,EAAgBG,KAGfJ,GACHQ,MAAM,2BAERC,EAAA,GAAYf,EAAZ,CAAmBL,UAAWW,EAAmBV,WAAYW,IAE/D,IAAK,oBACH,IAAIS,GAA2B,EAC3BT,EAAgB,EAChBU,EAAqB,GACzBjB,EAAMF,MAAMU,QAAQ,SAACC,GACfA,EAAQE,WAAaP,EAAOQ,QAAQD,SACtCG,MAAM,qBAENE,GAA2B,EAC3BT,EAAgBP,EAAMF,MAAMI,OAC5Be,EAAqB,CACnBN,SAAUP,EAAOQ,QAAQD,SACzBE,SAAUT,EAAOQ,QAAQC,SACzBK,OAAQd,EAAOQ,QAAQM,WAI7B,IAAMC,EAAQJ,EAAA,GAAQf,GAKtB,OAJAmB,EAASC,GAAT,GAAAC,OAAiBC,OACjBH,EAASxB,UAAYqB,EACrBG,EAASvB,WAAaW,EACtBY,EAASrB,MAAMyB,KAAKN,GACbE,EAET,IAAK,eACH,OAAAJ,EAAA,GACKf,EADL,CAEEL,UAAWS,EAAOQ,QAAQY,UAC1B5B,WAAYQ,EAAOQ,QAAQhB,aAG/B,IAAK,wBACH,IAAMuB,EAAWnB,EAEjB,OADAmB,EAASrB,MAAMqB,EAASvB,YAAYe,SAAWP,EAAOQ,QAC/CO,EAET,IAAK,OACH,OAAAJ,EAAA,GACKf,EADL,CAEEL,UAAWS,EAAOQ,QAAQjB,UAC1BC,WAAYQ,EAAOQ,QAAQhB,WAC3BE,MAAOM,EAAOQ,QAAQd,QAG1B,QACE,OAAOE,ujBC1Eb,IAAMP,EAAY,CAChBgC,QAAS,CACPC,YAAY,EACZC,cAAe,EACfC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,KA8CHC,EA1CS,WAA+B,IAA9B/B,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAWW,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACb,IAAK,kBACH,IAAM2B,EAAkBhC,EAexB,OAdIA,EAAM6B,gBAAgB3B,QAAU,KAClC8B,EAAgBH,gBAAgBI,QAE7BjC,EAAM0B,aACTM,EAAgBL,eAAiB,GAEnCK,EAAgBH,gBAAgBN,KAAKnB,EAAOQ,SAE5CoB,EAAgBH,gBAAgBK,KAAK,SAACC,EAAGC,GAAJ,OAClCD,EAAEE,KAAOD,EAAEC,OAGdL,EAAgBM,SAAU,EAEnBC,EAAA,GAAKP,GAEd,IAAK,eACH,IAAMQ,EAAexC,EAOrB,OALIA,EAAM8B,aAAa5B,QAAU,KAC/BsC,EAAaV,aAAaG,QAG5BO,EAAaV,aAAaW,QAAQrC,EAAOQ,SAClC2B,EAAA,GAAKC,GAEd,IAAK,kBACH,IAAME,EAAMtC,EAAOQ,QAAQgB,UAAU1B,OACrC,OAAOqC,EAAA,GAAKvC,EAAZ,CAAmB4B,UAAS,GAAAP,OAAKrB,EAAM4B,WAAXP,OAAuBjB,EAAOQ,QAAQgB,UAAUc,EAAM,MAEpF,IAAK,eACH,OAAOH,EAAA,GAAKvC,EAAZ,CAAmB0B,WAAYtB,EAAOQ,QAAQ+B,KAAMhB,cAAevB,EAAOQ,QAAQgC,QAEpF,QACE,OAAO5C,ICpBP6C,EAAUC,YAAgBC,GAIjBC,EAFDC,YAAYJ,EA1BR,CAChBnD,YAAa,CACXC,WAAW,EACXC,WAAY,EACZC,cAAe,6FACfC,MAAO,CACL,CACEsB,GAAI,GACJT,SAAU,QACVE,SAAU,QACVK,OAAQ,iEAIdgC,SAAU,CACRZ,SAAS,EACTZ,YAAY,EACZC,cAAe,EACfC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,MChBHqB,EARS,SAACxC,EAAUE,GAAX,MAAyB,CAC/CR,KAAM,cACNO,QAAS,CACPD,WACAE,cCKWuC,EATc,SAACzC,EAAUc,EAASY,GAApB,MAA8B,CACzDhC,KAAM,kBACNO,QAAS,CACPD,WACAc,UACAY,UCHWgB,6MCUbC,iBAAmB,SAACC,GAClBC,EAAKC,cAAgBF,EAAEG,OAAOC,SAGhCC,iBAAmB,SAACL,GAClBC,EAAKK,cAAgBN,EAAEG,OAAOC,SAGhCG,YAAc,SAACP,GACbA,EAAEQ,iBAEF,IAAMC,EAAMC,KAAKD,MAEjBhB,EAAMkB,SAASf,EAAgBK,EAAKC,cAAeD,EAAKK,gBACxDb,EAAMkB,SAASd,EAAqBI,EAAKC,cAAe,QAASO,6EAMjE,OAFAG,KAAKV,cAAgB,IACrBU,KAAKN,cAAgB,IAEnBO,EAAAjC,EAAAkC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACML,KAAKM,MADX,CAEEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAERR,EAAAjC,EAAAkC,cAACQ,EAAA,EAAD,CACEC,UAAU,4CACVC,SAAUZ,KAAKL,aAEfM,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKG,MAAN,KACEZ,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKI,MAAN,CAAYH,UAAU,cAAtB,sBACAV,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE9D,GAAG,WACHf,KAAK,OACL8E,SAAUhB,KAAKb,iBACf8B,YAAY,aAEdhB,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKI,MAAN,CAAYH,UAAU,cAAtB,iBACAV,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE9D,GAAG,eACHf,KAAK,WACL8E,SAAUhB,KAAKP,iBACfwB,YAAY,cAGhBhB,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CACEC,QAAQ,gBACRjF,KAAK,SACLyE,UAAU,UAHZ,kBAhDeS,aCTVC,ECGK,WAAM,IAAAC,EACUC,IAAMC,UAAS,GADzBC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAkB,EAAA,GACjBK,EADiBF,EAAA,GACNG,EADMH,EAAA,GAGxB,OACExB,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CAAQP,UAAU,SAASQ,QAAQ,gBAAgBW,QAAS,kBAAMF,GAAa,KAA/E,SAGA3B,EAAAjC,EAAAkC,cAAC6B,EAAD,CACEC,KAAML,EACNM,OAAQ,kBAAML,GAAa,QCNpBM,EATgB,SAAC1F,EAAUE,GAAX,MAAyB,CACtDR,KAAM,oBACNO,QAAS,CACPD,WACAE,WACAK,OAAQ,iECHGoF,cCUb,SAAAA,EAAY7B,GAAO,IAAAjB,EAAA,OAAAe,OAAAgC,EAAA,EAAAhC,CAAAJ,KAAAmC,IACjB9C,EAAAe,OAAAiC,EAAA,EAAAjC,CAAAJ,KAAAI,OAAAkC,EAAA,EAAAlC,CAAA+B,GAAAI,KAAAvC,KAAMM,KAMRX,YAAc,SAACP,GACbA,EAAEQ,iBAEF,IAAMC,EAAMC,KAAKD,MAEjBhB,EAAMkB,SAASmC,EAAuB7C,EAAKC,cAAeD,EAAKK,gBAC/Db,EAAMkB,SAASd,EAAqBI,EAAKC,cAAe,eAAgBO,KAbvDR,EAgBnBF,iBAAmB,SAACC,GAClBC,EAAKC,cAAgBF,EAAEG,OAAOC,OAjBbH,EAoBnBI,iBAAmB,SAACL,GAClBC,EAAKK,cAAgBN,EAAEG,OAAOC,OAlB9BH,EAAKC,cAAgB,GACrBD,EAAKK,cAAgB,GAJJL,wEAyBjB,OACEY,EAAAjC,EAAAkC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACML,KAAKM,MADX,CAEEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAERR,EAAAjC,EAAAkC,cAACQ,EAAA,EAAD,CACEC,UAAU,4CACVC,SAAUZ,KAAKL,aAEfM,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKG,MAAN,KACEZ,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKI,MAAN,CAAYH,UAAU,cAAtB,wBACAV,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE9D,GAAG,WACHf,KAAK,OACL8E,SAAUhB,KAAKb,iBACf8B,YAAY,aAEdhB,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKI,MAAN,CAAYH,UAAU,cAAtB,wBACAV,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE9D,GAAG,eACHf,KAAK,WACL8E,SAAUhB,KAAKP,iBACfwB,YAAY,cAGhBhB,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CACEC,QAAQ,gBACRjF,KAAK,SACLyE,UAAU,UAHZ,yBArDsBS,aCTjBoB,ECGY,WAAM,IAAAlB,EACGC,IAAMC,UAAS,GADlBC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAkB,EAAA,GACxBK,EADwBF,EAAA,GACbG,EADaH,EAAA,GAG/B,OACExB,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CAAQP,UAAU,SAASQ,QAAQ,gBAAgBW,QAAS,kBAAMF,GAAa,KAA/E,gBAGA3B,EAAAjC,EAAAkC,cAACuC,EAAD,CACET,KAAML,EACNM,OAAQ,kBAAML,GAAa,gBCVpBc,EALkB,SAAAlG,GAAQ,MAAK,CAC5CN,KAAM,wBACNO,QAASD,ICAImG,cCUb,SAAAA,EAAYrC,GAAO,IAAAjB,EAAA,OAAAe,OAAAgC,EAAA,EAAAhC,CAAAJ,KAAA2C,IACjBtD,EAAAe,OAAAiC,EAAA,EAAAjC,CAAAJ,KAAAI,OAAAkC,EAAA,EAAAlC,CAAAuC,GAAAJ,KAAAvC,KAAMM,KAKRX,YAAc,SAACP,GACbA,EAAEQ,iBAEF,IAAMC,EAAMC,KAAKD,MAEjBhB,EAAMkB,SAAS2C,EAAyBrD,EAAKC,cAAeD,EAAKK,gBACjEb,EAAMkB,SAASd,EAAqBI,EAAKC,cAAe,mBAAoBO,KAZ3DR,EAenBF,iBAAmB,SAACC,GAClBC,EAAKC,cAAgBF,EAAEG,OAAOC,OAb9BH,EAAKC,cAAgB,GAHJD,wEAoBjB,OACEY,EAAAjC,EAAAkC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACML,KAAKM,MADX,CAEEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAERR,EAAAjC,EAAAkC,cAACQ,EAAA,EAAD,CACEC,UAAU,4CACVC,SAAUZ,KAAKL,aAEfM,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKG,MAAN,CAAY+B,UAAU,kBACpB3C,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKI,MAAN,CAAYH,UAAU,cAAtB,4BACAV,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE7E,KAAK,OACL8E,SAAUhB,KAAKb,iBACf8B,YAAY,cAGhBhB,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CACEC,QAAQ,gBACRjF,KAAK,SACLyE,UAAU,UAHZ,mBAxCwBS,aCTnByB,ECqCAC,YAAQ,SAAAjH,GAAK,MAAK,CAC/BkH,gBAAiBlH,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,cAD9CqH,CA1BS,SAACxC,GAAU,IACzByC,EAAoBzC,EAApByC,gBADyBzB,EAECC,IAAMC,UAAS,GAFhBC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAkB,EAAA,GAE1BK,EAF0BF,EAAA,GAEfG,EAFeH,EAAA,GAIjC,OACExB,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAAC8C,EAAA,EAAOC,MAAR,CACEC,KAAK,QACLvC,UAAU,kBACVmB,QAAS,kBAAMF,GAAa,KAE3BmB,EAAgBvG,UAEnByD,EAAAjC,EAAAkC,cAACiD,EAAD,CACEnB,KAAML,EACNM,OAAQ,kBAAML,GAAa,MAE7B3B,EAAAjC,EAAAkC,cAACkD,EAAA,EAAD,CACEC,IAAKN,EAAgBhG,OACrB4D,UAAU,SACV2C,eAAa,OCzBNC,EARU,iBAAO,CAC9BrH,KAAM,eACNO,QAAS,CACPjB,WAAW,EACXC,WAAY,KCFD+H,ECqBAV,YAAQ,SAAAjH,GAAK,MAAK,CAC/BkH,gBAAiBlH,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,cAD9CqH,CAfM,SAAAW,GAAA,IAAGV,EAAHU,EAAGV,gBAAH,OACnB9C,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CACEP,UAAU,SACVQ,QAAQ,gBACRW,QAAS,WACP,IAAMjC,EAAMC,KAAKD,MAEjBhB,EAAMkB,SAASd,EAAqB8D,EAAgBvG,SAAU,SAAUqD,IACxEhB,EAAMkB,SAASwD,OAPnB,YCPaG,ECyCAZ,YAAQ,SAAAjH,GAAK,MAAK,CAAEL,UAAWK,EAAMN,YAAYC,YAAjDsH,CA7BA,SAACxC,GAAU,IAChB9E,EAAc8E,EAAd9E,UACR,OACEyE,EAAAjC,EAAAkC,cAACyD,EAAA,EAAD,CAAWhD,UAAU,2BAA2BiD,OAAK,GACnD3D,EAAAjC,EAAAkC,cAAC2D,EAAA,EAAD,KACE5D,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CAAKC,GAAI,GACP9D,EAAAjC,EAAAkC,cAAC8C,EAAA,EAAOC,MAAR,CAAcC,KAAK,QAAQvC,UAAU,mBAArC,yBAECnF,GACDyE,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CAAKC,GAAI,GAAIpD,UAAU,kBACrBV,EAAAjC,EAAAkC,cAAC8D,EAAD,MACA/D,EAAAjC,EAAAkC,cAAC+D,EAAD,OAGFzI,GACAyE,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CAAKC,GAAI,CAAEG,KAAM,EAAGC,OAAQ,IAC1BlE,EAAAjC,EAAAkC,cAACkE,EAAD,OAEFnE,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CAAKC,GAAI,GACP9D,EAAAjC,EAAAkC,cAACmE,EAAD,oBChCCC,ECkEAxB,YAAQ,SAAAjH,GAAK,MAAK,CAC/BkD,SAAUlD,EAAMkD,SAChBhC,OAAQlB,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,YAAYsB,OAC9DrB,cAAeG,EAAMN,YAAYG,cACjCc,SAAUX,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,YAAYe,WAJnDsG,CA/DE,SAAAW,GAKX,IAJJ1E,EAII0E,EAJJ1E,SACAhC,EAGI0G,EAHJ1G,OACAP,EAEIiH,EAFJjH,SACAd,EACI+H,EADJ/H,cAEM6I,EAAoBC,SAASD,kBAAoBC,SAASC,KAChEF,EAAiBG,UAAYH,EAAiBI,aAAe,GAE7D,IAQMC,EAAuB,SAACC,EAAiBC,GAC7C,OAAID,IAAoBC,EACf/H,EAEFrB,GAUHqJ,EAAiBhG,EAASrB,gBAAgBsH,IAAI,SAAAC,GAAI,OACtDhF,EAAAjC,EAAAkC,cAAC2D,EAAA,EAAD,CAAKqB,IAAK/H,MAAUwD,WARQkE,EAQwBI,EAAKzI,SARZsI,EAQsBtI,EAP/DqI,IAAoBC,EACf,iBAEF,gBAKL7E,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CACEqB,GAAI,EACJpB,GAAI,EACJpD,UAAU,wBAEVV,EAAAjC,EAAAkC,cAACkD,EAAA,EAAD,CACEC,IAAKuB,EAAqBK,EAAKzI,SAAUA,GACzCmE,UAAU,iBACV2C,eAAa,KAGjBrD,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CACEqB,GAAI,GACJpB,GAAI,GACJpD,UAAU,iBAEVV,EAAAjC,EAAAkC,cAAA,MAAIS,UAAU,oBAAoBsE,EAAKzI,UACvCyD,EAAAjC,EAAAkC,cAAA,KAAGS,UAAU,gBAAgBsE,EAAK3H,SAClC2C,EAAAjC,EAAAkC,cAAA,KAAGS,UAAU,gBA1CH,SAACzC,GACf,IAAMkH,EAAO,IAAItF,KAAK5B,GAItB,MAFgB,GAAAhB,OAAMkI,EAAKC,UAAX,KAAAnI,OAAwBkI,EAAKE,WAAa,EAA1C,KAAApI,OAA+CkI,EAAKG,cAApD,KAAArI,OACdkI,EAAKI,WADS,KAAAtI,OACKkI,EAAKK,cAsCOJ,CAAQJ,EAAK/G,SA3BnB,IAAC2G,EAAiBC,IAgC/C,OACE7E,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACGkD,KC7DQW,ECgBA5C,YAAQ,SAAAjH,GAAK,MAAK,CAC/BW,SAAUX,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,YAAYe,WADnDsG,CAfK,SAAAW,GAAkB,IAAfjH,EAAeiH,EAAfjH,SACf+H,EAAoBC,SAASD,kBAAoBC,SAASC,KAGhE,OAFAF,EAAiBG,UAAYH,EAAiBI,aAAe,GAG3D1E,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAAA,SACG1D,EACA,IAFH,iBCGAmJ,oLACK,IACCxH,EAAY6B,KAAKM,MAAjBnC,QACR,OACE8B,EAAAjC,EAAAkC,cAACyD,EAAA,EAAD,CAAWhD,UAAU,OAAOiD,OAAK,GAC/B3D,EAAAjC,EAAAkC,cAAC2D,EAAA,EAAD,CAAKlD,UAAU,6BACXxC,GACA8B,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CAAKnD,UAAU,iBACbV,EAAAjC,EAAAkC,cAAC0F,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLnF,UAAU,UACVQ,QAAQ,QAERlB,EAAAjC,EAAAkC,cAAA,QAAMS,UAAU,WAAhB,iBAIHxC,GACD8B,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,KACE7D,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAAC6F,EAAD,MACA9F,EAAAjC,EAAAkC,cAAC8F,EAAD,iBAtBG5E,aCVJuE,GD0CA7C,YAAQ,SAAAjH,GAAK,MAAK,CAC/BsC,QAAStC,EAAMkD,SAASZ,UADX2E,CAEX6C,IEtCWM,GARW,SAACzJ,EAAUc,GAAX,MAAwB,CAChDpB,KAAM,eACNO,QAAS,CACPD,WACAc,aCSE4I,8MACJC,gBAAkB,SAAC/G,GACjBC,EAAK/B,QAAU8B,EAAEG,OAAOC,SAG1BG,YAAc,SAACP,GACbA,EAAEQ,iBACFP,EAAK7C,SAAW6C,EAAK0D,gBAAgBvG,SAErCqC,EAAMkB,SAASkG,GAAkB5G,EAAK7C,SAAU6C,EAAK/B,UAErD+B,EAAK+G,GAAGC,KAAKC,KAAKC,UAAU,CAC1BC,KAAMnH,EAAK7C,SACXc,QAAS+B,EAAK/B,WAEhB8B,EAAEG,OAAOkH,KAAKjH,MAAQ,4EAGf,IAAAkH,EACyB1G,KAAKM,MAA7ByC,EADD2D,EACC3D,gBAAiBqD,EADlBM,EACkBN,GAKzB,OAHApG,KAAK+C,gBAAkBA,EACvB/C,KAAKoG,GAAKA,EAGRnG,EAAAjC,EAAAkC,cAACyD,EAAA,EAAD,CAAWhD,UAAU,8BAA8BiD,OAAK,GACtD3D,EAAAjC,EAAAkC,cAACQ,EAAA,EAAD,CACEC,UAAU,cACVC,SAAUZ,KAAKL,aAEfM,EAAAjC,EAAAkC,cAAC2D,EAAA,EAAD,KACE5D,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CACEqB,GAAI,GACJwB,GAAI,GACJ5C,GAAI,GAEJ9D,EAAAjC,EAAAkC,cAACQ,EAAA,EAAKK,QAAN,CACE9D,GAAG,OACHf,KAAK,OACL8E,SAAUhB,KAAKmG,gBACflF,YAAY,eACZN,UAAU,eAGdV,EAAAjC,EAAAkC,cAAC4D,EAAA,EAAD,CACEqB,GAAI,EACJwB,GAAI,EACJ5C,GAAI,GAEJ9D,EAAAjC,EAAAkC,cAACgB,EAAA,EAAD,CACEC,QAAQ,gBACRjF,KAAK,SACLyE,UAAU,UAHZ,qBAjDOS,aCXN8E,GD2EApD,YAAQ,SAAAjH,GAAK,MAAK,CAC/BkH,gBAAiBlH,EAAMN,YAAYI,MAAME,EAAMN,YAAYE,cAD9CqH,CAEXoD,IE9DWU,GAdU,SAACR,GACxB,IAAMS,EAAYT,EAElBS,EAAUC,OAAS,aAEnBD,EAAUE,UAAY,SAAC3H,GACEkH,KAAKU,MAAM5H,EAAE6H,MAAMC,MAAM,EAAG,IAEpC7K,QAAQ,SAAC4I,GACtBpG,EAAMkB,SAASd,EAAqBgG,EAAKuB,KAAMvB,EAAK3H,QAAS2H,EAAK/G,WCFzDiJ,GAVU,SAAC5L,GACxB,IAAM6L,EAAiBd,KAAKC,UAAUhL,GAEtC8L,aAAaC,QAAQ,cAAeF,ICMvBG,GATI,SAAC/L,EAAWC,EAAYE,GAAxB,MAAmC,CACpDO,KAAM,OACNO,QAAS,CACPjB,YACAC,aACAE,WCIW6L,GANU,WACvB,IAAMP,EAAOX,KAAKU,MAAMK,aAAaI,QAAQ,gBAE7C5I,EAAMkB,SAASwH,GAAWN,EAAKzL,UAAWyL,EAAKxL,WAAYwL,EAAKtL,SCEnD+L,GARU,SAAClJ,EAAMC,GAAP,MAAkB,CACzCvC,KAAM,eACNO,QAAS,CACP+B,OACAC,WCWEkJ,eACJ,SAAAA,IAAc,IAAAtI,EAAA,OAAAe,OAAAgC,EAAA,EAAAhC,CAAAJ,KAAA2H,IACZtI,EAAAe,OAAAiC,EAAA,EAAAjC,CAAAJ,KAAAI,OAAAkC,EAAA,EAAAlC,CAAAuH,GAAApF,KAAAvC,QAEKoG,GAAK,IAAIwB,UAAU,iCACxBvI,EAAK+G,GAAK,IAAIyB,IAAsB,iCAJxBxI,wEAOL,IAAAqH,EAC8B1G,KAAKM,MAAlC7B,EADDiI,EACCjI,MAAOD,EADRkI,EACQlI,KAAMjD,EADdmL,EACcnL,YAmBrB,OAjBAqL,GAAiB5G,KAAKoG,IAEtB0B,OAAOC,OAAS,kBAAMP,MACtBM,OAAOE,SAAW,kBAAMC,GAAiB1M,IAEzCuM,OAAOI,QAAU,WACf1D,SAAS2D,MAAQ,OACjBtJ,EAAMkB,SAASqI,IAAiB,EAAM,KAExCN,OAAOO,OAAS,WACdxJ,EAAMkB,SAASqI,IAAiB,EAAO3J,KAGpCD,IACHgG,SAAS2D,MAAT,GAAAjL,OAAoBuB,EAApB,qBAIAwB,EAAAjC,EAAAkC,cAAAD,EAAAjC,EAAA6D,SAAA,KACE5B,EAAAjC,EAAAkC,cAACoI,EAAD,MACArI,EAAAjC,EAAAkC,cAACqI,GAAD,MACAtI,EAAAjC,EAAAkC,cAACsI,GAAD,CAAQpC,GAAIpG,KAAKoG,aAhCPhF,aCbHuG,GDmDA7E,YAAQ,SAAAjH,GAAK,MAAK,CAC/B4C,MAAO5C,EAAMkD,SAASvB,cACtBgB,KAAM3C,EAAMkD,SAASxB,WACrBhC,YAAaM,EAAMN,cAHNuH,CAIX6E,gBE7CgBc,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCNNC,IAASC,OACP7I,EAAAjC,EAAAkC,cAAC6I,EAAA,EAAD,CAAUlK,MAAOA,GACfoB,EAAAjC,EAAAkC,cAAC8I,GAAD,OACWxE,SAASyE,eAAe,SDkHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.26d68de9.chunk.js","sourcesContent":["import uniqid from 'uniqid';\n\nconst stateUser = {\n  settingUser: {\n    loginUser: false,\n    numberUser: 0,\n    defaultAvatar: 'https://windows10free.ru/uploads/posts/2017-04/1493287748_1487679899_icon-user-640x640.png',\n    users: [],\n  },\n};\n\nconst reducerUser = (state = stateUser, action) => {\n  switch (action.type) {\n    case 'USER_LOG_IN': {\n      let newUserLogInState = false;\n      let newNumberUser = 0;\n\n      state.users.forEach((element, i) => {\n        if (element.nickName === action.payload.nickName\n          && element.password === action.payload.password) {\n          newUserLogInState = true;\n          newNumberUser = i;\n        }\n      });\n      if (!newUserLogInState) {\n        alert('wrong login or password');\n      }\n      return { ...state, loginUser: newUserLogInState, numberUser: newNumberUser };\n    }\n    case 'USER_REGISTRATION': {\n      let newUserRegistrationState = false;\n      let newNumberUser = 0;\n      let newUserInformation = {};\n      state.users.forEach((element) => {\n        if (element.nickName === action.payload.nickName) {\n          alert('Nickname is busy');\n        } else {\n          newUserRegistrationState = true;\n          newNumberUser = state.users.length;\n          newUserInformation = {\n            nickName: action.payload.nickName,\n            password: action.payload.password,\n            avatar: action.payload.avatar,\n          };\n        }\n      });\n      const newState = { ...state };\n      newState.id = `${uniqid()}`;\n      newState.loginUser = newUserRegistrationState;\n      newState.numberUser = newNumberUser;\n      newState.users.push(newUserInformation);\n      return newState;\n    }\n    case 'USER_LOG_OUT': {\n      return {\n        ...state,\n        loginUser: action.payload.logunUser,\n        numberUser: action.payload.numberUser,\n      };\n    }\n    case 'USER_CHANGE_NICK_NAME': {\n      const newState = state;\n      newState.users[newState.numberUser].nickName = action.payload;\n      return newState;\n    }\n    case 'LOAD': {\n      return {\n        ...state,\n        loginUser: action.payload.loginUser,\n        numberUser: action.payload.numberUser,\n        users: action.payload.users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducerUser;\n","const stateUser = {\n  message: {\n    userIsHere: true,\n    countMessages: 0,\n    formValue: '',\n    someoneMessages: [],\n    yourMessages: [],\n  },\n};\n\nconst reducerMessages = (state = stateUser, action) => {\n  switch (action.type) {\n    case 'SOMEONE_MESSAGE': {\n      const newSomeoneState = state;\n      if (state.someoneMessages.length >= 100) {\n        newSomeoneState.someoneMessages.shift();\n      }\n      if (!state.userIsHere) {\n        newSomeoneState.countMessages += 1;\n      }\n      newSomeoneState.someoneMessages.push(action.payload);\n\n      newSomeoneState.someoneMessages.sort((a, b) => (\n        (a.time - b.time)\n      ));\n\n      newSomeoneState.spinner = false;\n\n      return { ...newSomeoneState };\n    }\n    case 'YOUR_MESSAGE': {\n      const newYourState = state;\n\n      if (state.yourMessages.length >= 100) {\n        newYourState.yourMessages.shift();\n      }\n\n      newYourState.yourMessages.unshift(action.payload);\n      return { ...newYourState };\n    }\n    case 'SAVE_FORM_VALUE': {\n      const len = action.payload.formValue.length;\n      return { ...state, formValue: `${state.formValue}${action.payload.formValue[len - 1]}` };\n    }\n    case 'USER_IS_HERE': {\n      return { ...state, userIsHere: action.payload.user, countMessages: action.payload.count };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducerMessages;\n","import { createStore, combineReducers } from 'redux';\n\nimport * as reducers from './reducers';\n\nconst initState = {\n  settingUser: {\n    loginUser: false,\n    numberUser: 0,\n    defaultAvatar: 'https://windows10free.ru/uploads/posts/2017-04/1493287748_1487679899_icon-user-640x640.png',\n    users: [\n      {\n        id: '',\n        nickName: 'Guest',\n        password: 'admin',\n        avatar: 'https://hostenko.com/wpcafe/wp-content/uploads/wpavatar.png',\n      },\n    ],\n  },\n  messages: {\n    spinner: true,\n    userIsHere: true,\n    countMessages: 0,\n    formValue: '',\n    someoneMessages: [],\n    yourMessages: [],\n  },\n};\n\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(reducer, initState);\n\nexport default store;\n","const actionUserLogIn = (nickName, password) => ({\r\n  type: 'USER_LOG_IN',\r\n  payload: {\r\n    nickName,\r\n    password,\r\n  },\r\n});\r\n\r\nexport default actionUserLogIn;\r\n","const actionSomeoneMessage = (nickName, message, time) => ({\n  type: 'SOMEONE_MESSAGE',\n  payload: {\n    nickName,\n    message,\n    time,\n  },\n});\n\nexport default actionSomeoneMessage;\n","import LogInModal from './LogInModal';\n\nexport default LogInModal;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n} from 'react-bootstrap';\n\nimport store from '../../../../../store/state';\nimport actionUserLogIn from '../../../../../store/actions/actionUserLogIn';\nimport actionSomeoneMessage from '../../../../../store/actions/actionSomeoneMessage';\n\nclass LogInModal extends Component {\n  onChangeNickName = (e) => {\n    this.valueNickName = e.target.value;\n  }\n\n  onChangePassword = (e) => {\n    this.valuePassword = e.target.value;\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n\n    const now = Date.now();\n\n    store.dispatch(actionUserLogIn(this.valueNickName, this.valuePassword));\n    store.dispatch(actionSomeoneMessage(this.valueNickName, 'LogIn', now));\n  }\n\n  render() {\n    this.valueNickName = ' ';\n    this.valuePassword = ' ';\n    return (\n      <Modal\n        {...this.props}\n        size=\"xs\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form\n          className=\"text-center modal-form bg-dark text-light\"\n          onSubmit={this.submitValue}\n        >\n          <Form.Group>\n            <Form.Label className=\"title-form\">Send your Nickname</Form.Label>\n            <Form.Control\n              id=\"formName\"\n              type=\"text\"\n              onChange={this.onChangeNickName}\n              placeholder=\"NickName\"\n            />\n            <Form.Label className=\"title-form\">Send Password</Form.Label>\n            <Form.Control\n              id=\"formPassword\"\n              type=\"password\"\n              onChange={this.onChangePassword}\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button\n            variant=\"outline-light\"\n            type=\"submit\"\n            className=\"button\"\n          >\n            LogIn\n          </Button>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default LogInModal;\n","import LogInButton from './LogInButton';\n\nexport default LogInButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport LogInModal from '../LogInModal';\n\nconst LogInButton = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button className=\"button\" variant=\"outline-light\" onClick={() => setModalShow(true)}>\n        LogIn\n      </Button>\n      <LogInModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n\nexport default LogInButton;\n","const actionUserRegistration = (nickName, password) => ({\r\n  type: 'USER_REGISTRATION',\r\n  payload: {\r\n    nickName,\r\n    password,\r\n    avatar: 'https://hostenko.com/wpcafe/wp-content/uploads/wpavatar.png',\r\n  },\r\n});\r\n\r\nexport default actionUserRegistration;\r\n","import RegistrationModal from './RegistrationModal';\n\nexport default RegistrationModal;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n} from 'react-bootstrap';\n\nimport store from '../../../../../store/state';\nimport actionUserRegistration from '../../../../../store/actions/actionUserRegistration';\nimport actionSomeoneMessage from '../../../../../store/actions/actionSomeoneMessage';\n\nclass RegistrationModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueNickName = '';\n    this.valuePassword = '';\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n\n    const now = Date.now();\n\n    store.dispatch(actionUserRegistration(this.valueNickName, this.valuePassword));\n    store.dispatch(actionSomeoneMessage(this.valueNickName, 'registration', now));\n  };\n\n  onChangeNickName = (e) => {\n    this.valueNickName = e.target.value;\n  };\n\n  onChangePassword = (e) => {\n    this.valuePassword = e.target.value;\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"xs\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form\n          className=\"text-center modal-form bg-dark text-light\"\n          onSubmit={this.submitValue}\n        >\n          <Form.Group>\n            <Form.Label className=\"title-form\">Invent your Nickname</Form.Label>\n            <Form.Control\n              id=\"formName\"\n              type=\"text\"\n              onChange={this.onChangeNickName}\n              placeholder=\"NickName\"\n            />\n            <Form.Label className=\"title-form\">Invent your Password</Form.Label>\n            <Form.Control\n              id=\"formPassword\"\n              type=\"password\"\n              onChange={this.onChangePassword}\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button\n            variant=\"outline-light\"\n            type=\"submit\"\n            className=\"button\"\n          >\n            Registration\n          </Button>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default RegistrationModal;\n","import RegistrationButton from './RegistrationButton';\n\nexport default RegistrationButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport RegistrationModal from '../RegistrationModal';\n\nconst RegistrationButton = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button className=\"button\" variant=\"outline-light\" onClick={() => setModalShow(true)}>\n        Registration\n      </Button>\n      <RegistrationModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n\nexport default RegistrationButton;\n","const actionUserChangeNickName = nickName => ({\n  type: 'USER_CHANGE_NICK_NAME',\n  payload: nickName,\n});\n\nexport default actionUserChangeNickName;\n","import ChangeNickNameModal from './ChangeNickNameModal';\n\nexport default ChangeNickNameModal;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n} from 'react-bootstrap';\n\nimport store from '../../../../../../store/state';\nimport actionUserChangeNickName from '../../../../../../store/actions/actionUserChangeNickName';\nimport actionSomeoneMessage from '../../../../../../store/actions/actionSomeoneMessage';\n\nclass ChangeNickNameModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueNickName = '';\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n\n    const now = Date.now();\n\n    store.dispatch(actionUserChangeNickName(this.valueNickName, this.valuePassword));\n    store.dispatch(actionSomeoneMessage(this.valueNickName, 'changed nickname', now));\n  };\n\n  onChangeNickName = (e) => {\n    this.valueNickName = e.target.value;\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"xs\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form\n          className=\"text-center modal-form bg-dark text-light\"\n          onSubmit={this.submitValue}\n        >\n          <Form.Group controlId=\"formChangeName\">\n            <Form.Label className=\"title-form\">Invent your new Nickname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={this.onChangeNickName}\n              placeholder=\"NickName\"\n            />\n          </Form.Group>\n          <Button\n            variant=\"outline-light\"\n            type=\"submit\"\n            className=\"button\"\n          >\n            Change\n          </Button>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default ChangeNickNameModal;\n","import UserInformation from './UserInformation';\n\nexport default UserInformation;\n","import React from 'react';\nimport { Navbar, Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport ChangeNickNameModal from './ChangeNameModal';\n\n// const changeName = () => {\n//   return (\n//     <ChangeNickNameModal />\n//   );\n// };\n\n\nconst UserInformation = (props) => {\n  const { userInformation } = props;\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Navbar.Brand\n        href=\"#home\"\n        className=\"text-light logo\"\n        onClick={() => setModalShow(true)}\n      >\n        {userInformation.nickName}\n      </Navbar.Brand>\n      <ChangeNickNameModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n      <Image\n        src={userInformation.avatar}\n        className=\"avatar\"\n        roundedCircle\n      />\n    </>\n  );\n};\n\nexport default connect(state => ({\n  userInformation: state.settingUser.users[state.settingUser.numberUser],\n}))(UserInformation);\n","const actionUserLogOut = () => ({\n  type: 'USER_LOG_OUT',\n  payload: {\n    loginUser: false,\n    numberUser: 0,\n  },\n});\n\nexport default actionUserLogOut;\n","import LogOutButton from './LogOutButton';\n\nexport default LogOutButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport store from '../../../../../store/state';\nimport actionUserLogOut from '../../../../../store/actions/actionUserLogOut';\nimport actionSomeoneMessage from '../../../../../store/actions/actionSomeoneMessage';\n\nconst LogOutButton = ({ userInformation }) => (\n  <Button\n    className=\"button\"\n    variant=\"outline-light\"\n    onClick={() => {\n      const now = Date.now();\n\n      store.dispatch(actionSomeoneMessage(userInformation.nickName, 'LogOut', now));\n      store.dispatch(actionUserLogOut());\n    }}\n  >\n    LogOut\n  </Button>\n);\n\nexport default connect(state => ({\n  userInformation: state.settingUser.users[state.settingUser.numberUser],\n}))(LogOutButton);\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Navbar,\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap';\n\nimport LogInButton from './ComponentsPart/LogIn/LogInButton';\nimport RegistrationButton from './ComponentsPart/Registration/RegistrationButton';\nimport UserInformation from './ComponentsPart/UserInformation/UserInformation';\nimport LogOutButton from './ComponentsPart/UserInformation/LogOutButton';\n\nconst Header = (props) => {\n  const { loginUser } = props;\n  return (\n    <Container className=\"fixed-top bg-dark header\" fluid>\n      <Row>\n        <Col xs={2}>\n          <Navbar.Brand href=\"#home\" className=\"text-light logo\">Chat.[enerjaizzzer]</Navbar.Brand>\n        </Col>\n        {(!loginUser) && (\n          <Col xs={10} className=\"header-buttons\">\n            <LogInButton />\n            <RegistrationButton />\n          </Col>\n        )}\n        {(loginUser) && (\n          <>\n            <Col xs={{ span: 2, offset: 7 }}>\n              <UserInformation />\n            </Col>\n            <Col xs={1}>\n              <LogOutButton />\n            </Col>\n          </>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default connect(state => ({ loginUser: state.settingUser.loginUser }))(Header);\n","import Messages from './Messages';\n\nexport default Messages;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport uniqid from 'uniqid';\nimport { Row, Col, Image } from 'react-bootstrap';\n\nconst Messages = ({\n  messages,\n  avatar,\n  nickName,\n  defaultAvatar,\n}) => {\n  const scrollingElement = (document.scrollingElement || document.body);\n  scrollingElement.scrollTop = scrollingElement.scrollHeight + 50;\n\n  const getDate = (time) => {\n    const date = new Date(time);\n\n    const dateString = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()} ${\n      date.getHours()}:${date.getMinutes()}`;\n    return dateString;\n  };\n\n  const avatarIdentification = (messageNickName, userNickName) => {\n    if (messageNickName === userNickName) {\n      return avatar;\n    }\n    return defaultAvatar;\n  };\n\n  const identificationAuthor = (messageNickName, userNickName) => {\n    if (messageNickName === userNickName) {\n      return 'message-row my';\n    }\n    return 'message-row';\n  };\n\n  const RenderMessages = messages.someoneMessages.map(item => (\n    <Row key={uniqid()} className={identificationAuthor(item.nickName, nickName)}>\n      <Col\n        xl={1}\n        xs={2}\n        className=\"block-message-avatar\"\n      >\n        <Image\n          src={avatarIdentification(item.nickName, nickName)}\n          className=\"message-avatar\"\n          roundedCircle\n        />\n      </Col>\n      <Col\n        xl={11}\n        xs={10}\n        className=\"block-message\"\n      >\n        <h2 className=\"message-nickName\">{item.nickName}</h2>\n        <p className=\"message-text\">{item.message}</p>\n        <p className=\"message-date\">{getDate(item.time)}</p>\n      </Col>\n    </Row>\n  ));\n\n  return (\n    <>\n      {RenderMessages}\n    </>\n  );\n};\n\nexport default connect(state => ({\n  messages: state.messages,\n  avatar: state.settingUser.users[state.settingUser.numberUser].avatar,\n  defaultAvatar: state.settingUser.defaultAvatar,\n  nickName: state.settingUser.users[state.settingUser.numberUser].nickName,\n}))(Messages);\n","import ConnectUser from './ConnectUser';\n\nexport default ConnectUser;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ConnectUser = ({ nickName }) => {\n  const scrollingElement = (document.scrollingElement || document.body);\n  scrollingElement.scrollTop = scrollingElement.scrollHeight + 50;\n\n  return (\n    <>\n      <p>\n        {nickName}\n        {' '}\n        connected!\n      </p>\n    </>\n  );\n};\n\nexport default connect(state => ({\n  nickName: state.settingUser.users[state.settingUser.numberUser].nickName,\n}))(ConnectUser);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  Row,\n  Col,\n  Spinner,\n} from 'react-bootstrap';\n\nimport Messages from './ComponentsPart/Messages';\nimport ConnectUser from './ComponentsPart/ConnectUser';\n\nclass Main extends Component {\n  render() {\n    const { spinner } = this.props;\n    return (\n      <Container className=\"main\" fluid>\n        <Row className=\"justify-content-md-center\">\n          {(spinner) && (\n            <Col className=\"spinner-block\">\n              <Spinner\n                animation=\"border\"\n                role=\"status\"\n                className=\"spinner\"\n                variant=\"dark\"\n              >\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          )}\n          {(!spinner) && (\n            <Col>\n              <>\n                <Messages />\n                <ConnectUser />\n              </>\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default connect(state => ({\n  spinner: state.messages.spinner,\n}))(Main);\n","import Main from './Main';\n\nexport default Main;\n","const actionYourMessage = (nickName, message) => ({\r\n  type: 'YOUR_MESSAGE',\r\n  payload: {\r\n    nickName,\r\n    message,\r\n  },\r\n});\r\n\r\nexport default actionYourMessage;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Form,\n  Col,\n  Row,\n  Container,\n} from 'react-bootstrap';\n\nimport store from '../../store/state';\nimport actionYourMessage from '../../store/actions/actionYourMessage';\n\nclass Footer extends Component {\n  onChangeMessage = (e) => {\n    this.message = e.target.value;\n  }\n\n  submitValue = (e) => {\n    e.preventDefault();\n    this.nickName = this.userInformation.nickName;\n\n    store.dispatch(actionYourMessage(this.nickName, this.message));\n\n    this.ws.send(JSON.stringify({\n      from: this.nickName,\n      message: this.message,\n    }));\n    e.target.form.value = '';\n  }\n\n  render() {\n    const { userInformation, ws } = this.props;\n\n    this.userInformation = userInformation;\n    this.ws = ws;\n\n    return (\n      <Container className=\"fixed-bottom bg-dark footer\" fluid>\n        <Form\n          className=\"text-center\"\n          onSubmit={this.submitValue}\n        >\n          <Row>\n            <Col\n              xl={11}\n              md={10}\n              xs={9}\n            >\n              <Form.Control\n                id=\"form\"\n                type=\"text\"\n                onChange={this.onChangeMessage}\n                placeholder=\"Text message\"\n                className=\"send-form\"\n              />\n            </Col>\n            <Col\n              xl={1}\n              md={2}\n              xs={3}\n            >\n              <Button\n                variant=\"outline-light\"\n                type=\"submit\"\n                className=\"button\"\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default connect(state => ({\n  userInformation: state.settingUser.users[state.settingUser.numberUser],\n}))(Footer);\n","import Footer from './Footer';\n\nexport default Footer;\n","import store from '../store/state';\nimport actionSomeoneMessage from '../store/actions/actionSomeoneMessage';\n\nconst connectWebSocket = (ws) => {\n  const webSocket = ws;\n\n  webSocket.onopen = () => { };\n\n  webSocket.onmessage = (e) => {\n    const someoneMessage = JSON.parse(e.data).slice(0, 99);\n\n    someoneMessage.forEach((item) => {\n      store.dispatch(actionSomeoneMessage(item.from, item.message, item.time));\n    });\n  };\n};\n\nexport default connectWebSocket;\n","const saveLocalstorage = (settingUser) => {\n  const settingUserStr = JSON.stringify(settingUser);\n\n  localStorage.setItem('settingUser', settingUserStr);\n\n  // const localValue = JSON.parse(localStorage.getItem('settingUser'));\n\n  // return localValue;\n};\n\nexport default saveLocalstorage;\n","const actionLoad = (loginUser, numberUser, users) => ({\n  type: 'LOAD',\n  payload: {\n    loginUser,\n    numberUser,\n    users,\n  },\n});\n\nexport default actionLoad;\n","import store from '../store/state';\nimport actionLoad from '../store/actions/actionLoad';\n\nconst loadLocalStorage = () => {\n  const data = JSON.parse(localStorage.getItem('settingUser'));\n\n  store.dispatch(actionLoad(data.loginUser, data.numberUser, data.users));\n};\n\nexport default loadLocalStorage;\n","const actionUserIsHear = (user, count) => ({\n  type: 'USER_IS_HERE',\n  payload: {\n    user,\n    count,\n  },\n});\n\nexport default actionUserIsHear;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\nimport Header from './header';\nimport Main from './main';\nimport Footer from './footer';\n\nimport connectWebSocket from '../utils/connectWebSocket';\nimport saveLocalStorage from '../utils/saveLocalStorage';\nimport loadLocalStorage from '../utils/loadLocalStorage';\nimport actionUserIsHere from '../store/actions/actionUserIsHere';\n\nimport store from '../store/state';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.ws = new WebSocket('wss://wssproxy.herokuapp.com/');\n    this.ws = new ReconnectingWebSocket('wss://wssproxy.herokuapp.com/');\n  }\n\n  render() {\n    const { count, user, settingUser } = this.props;\n\n    connectWebSocket(this.ws);\n\n    window.onload = () => loadLocalStorage();\n    window.onunload = () => saveLocalStorage(settingUser);\n\n    window.onfocus = () => {\n      document.title = 'Chat';\n      store.dispatch(actionUserIsHere(true, 0));\n    };\n    window.onblur = () => {\n      store.dispatch(actionUserIsHere(false, count));\n    };\n\n    if (!user) {\n      document.title = `${count} unread messages`;\n    }\n\n    return (\n      <>\n        <Header />\n        <Main />\n        <Footer ws={this.ws} />\n      </>\n    );\n  }\n}\n\nexport default connect(state => ({\n  count: state.messages.countMessages,\n  user: state.messages.userIsHere,\n  settingUser: state.settingUser,\n}))(App);\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components';\nimport store from './store/state';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}